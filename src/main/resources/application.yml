server:
  port: 8080

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: agigateway-service
    # ??? ???? ??? ??? ???? ??? ? ?????? ??? ????.
  cloud:
    gateway:
      # 글로벌 필터 선언
      # 글로벌 필터로서 모든 라우트에 공통적으로 적용이 된다.
      # 글로벌 필터는 모든 필터의 가장 앞에서 호출이 되고 가장 마지막에 끝난다.
      # 이렇게 클래스가 외부에 있는 파일을 변경이 가능하므로 마이크로 서비스에는 영향이 없다.
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
        - id: first-service
          uri: http://localhost:8081/
          predicates:
             # 아래 패스에 적힌 url을 위 uri로 보낸다.
            - Path=/first-service/**
          # yaml에서 필터를 설정할 수 있다.
          # 혹은 커스텀 필터를 자바 코드로 구현하여 넣을 수 있다.
          filters:
#            - AddRequestHeader=first-request, first-requests-header2
#            - AddResponseHeader=first-response, first-responses-header2
            - name: CustomFilter
        - id: second-service
          uri: http://localhost:8082/
          predicates:
             # 아래 패스에 적힌 url을 위 uri로 보낸다.
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-requests-header2
#            - AddResponseHeader=second-response, second-responses-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi,there
                preLogger: true
                postLogger: true
